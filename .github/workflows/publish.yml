name: Publish Packages

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags like v1.0.0

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Install dependencies
        run: npm ci

      - name: Validate schemas
        run: npm run validate

      - name: Run compatibility checks
        run: npm run check-compatibility

      - name: Verify Go module
        working-directory: codegen/go
        run: |
          go mod verify
          go build .

  publish-npm:
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org/'

      - name: Install dependencies
        run: npm ci

      - name: Generate TypeScript types
        run: npm run generate-ts

      - name: Update package version
        working-directory: codegen/ts
        run: |
          # Extract version from git tag (remove 'v' prefix)
          VERSION=${GITHUB_REF#refs/tags/v}
          npm version $VERSION --no-git-tag-version

      - name: Publish to NPM
        working-directory: codegen/ts
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-go:
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Generate Go types
        run: npm run generate-go

      - name: Create Go module tag
        run: |
          # Extract version from git tag
          VERSION=${GITHUB_REF#refs/tags/}

          # Tag the Go module subdirectory
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag "codegen/go/$VERSION"
          git push origin "codegen/go/$VERSION"

      - name: Verify Go module accessibility
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          # Test that the module can be fetched
          GOPROXY=direct go list -m github.com/rakeyshgidwani/sunday-schemas/codegen/go@$VERSION

  release:
    needs: [publish-npm, publish-go]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Sunday Schemas ${{ github.ref }}
          body: |
            ## Sunday Schemas Release

            ### Published Packages
            - **NPM**: `@sunday/schemas@${GITHUB_REF#refs/tags/v}`
            - **Go**: `github.com/rakeyshgidwani/sunday-schemas/codegen/go@${{ github.ref }}`

            ### Usage
            ```bash
            # TypeScript/JavaScript
            npm install @sunday/schemas@${GITHUB_REF#refs/tags/v}

            # Go
            go get github.com/rakeyshgidwani/sunday-schemas/codegen/go@${{ github.ref }}
            ```

            See [IMPLEMENTATION_REPORT.md](./IMPLEMENTATION_REPORT.md) for detailed usage examples.
          draft: false
          prerelease: false